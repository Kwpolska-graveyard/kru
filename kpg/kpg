#!/usr/bin/perl
# KPG
# Part of KRU
# Copyright Kwpolska 2010. Licensed on GPLv3.
# Portions copyright Enlik 2010.
#USAGE: ./kpg file1 [file2] [file3] (and more)

use warnings;
use strict;
use File::Basename;
use File::Copy;
use Config::Tiny;

my $config = Config::Tiny->new;
$config = Config::Tiny->read( "$ENV{HOME}/.kpgrc.ini" );
my $markdown = $config->{_}->{markdown};
my $template = $config->{_}->{template};

sub generate {
   my $base=shift;
   my $tmp = $base.".tmp";
   my $basename = fileparse($base, qr/\.[^.]*/);
   my $location = $basename.".html";

#opening files
   open my $from, '<', $template or die "Can't read the template! $!\n";
   open my $to, '>', $location or die "Can't create the destination file! $!\n";
   open my $basefh, '<', $base or die "Can't read the base file! $!\n";
   open my $tmpfh, '>', $tmp, or die "Can't read the temp file! $!\n";

#reading the title
   my @bfile = <$basefh>;
   my $title = $bfile['0'];
   $title =~ s/\n//g;

#but that doesn't mean that it's done.
   shift @bfile;
   print $tmpfh join("\n", @bfile);

#now we can parse it.
   open my $fh, '-|', $markdown, $tmp or die "Can't parse the content! Is the path correct? $!\n"; my $content = do { local $/; <$fh> };
   unlink($tmp) or die "Can't remove the temp file! $!\n";

#I guess that's it.
   while(<$from>) {
      $_ =~ s/_KPGTITLE_/$title/;
      $_ =~ s/_KPGCONTENT_/$content/;
      print $to $_;
   }
   print "$location\n";
}

my $argc = $#ARGV + 1;
my $i = 0;

